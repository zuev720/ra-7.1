{"version":3,"sources":["App.js","Hoc/withDateTime.jsx","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","Video","DateTimePretty","Component","timePassed","moment","fromNow","React","withDateTime","title","src","url","allow","VideoList","list","map","item","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIA,SAASA,EAASC,GAChB,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,OAIjC,SAASC,EAAMH,GACb,IAAMI,ECRD,SAAsBC,EAAWH,GACpC,IAAMI,EAAaC,IAAOL,GAAMM,UAChC,mKACI,WACI,OACI,cAACH,EAAD,CAAWH,KAAMI,QAH7B,GAAqBG,IAAMJ,WDMNK,CAAaX,EAAUC,EAAME,MACpD,OACI,sBAAKD,UAAU,QAAf,UACE,wBAAQU,MAAM,QAAQC,IAAKZ,EAAMa,IAAKC,MAAM,8BAC5C,cAACV,EAAD,OAKR,SAASW,EAAUf,GACjB,OAAOA,EAAMgB,KAAKC,KAAI,SAAAC,GAAI,OAAI,cAACf,EAAD,CAAsBU,IAAKK,EAAKL,IAAKX,KAAMgB,EAAKhB,MAApCgB,EAAKL,QAGlC,SAASM,IACtB,MAAeC,mBAAS,CACtB,CACEP,IAAK,gFACLX,KAAM,uBAER,CACEW,IAAK,gFACLX,KAAM,uBAER,CACEW,IAAK,gFACLX,KAAM,uBAER,CACEW,IAAK,gFACLX,KAAM,uBAER,CACEW,IAAK,gFACLX,KAAM,uBAER,CACEW,IAAK,gFACLX,KAAM,yBAvBHc,EAAP,oBA2BA,OACI,cAACD,EAAD,CAAWC,KAAMA,IErDvB,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.98cd81c9.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css';\nimport {withDateTime} from './Hoc/withDateTime'\n\nfunction DateTime(props) {\n  return (\n      <p className=\"date\">{props.date}</p>\n  )\n}\n\nfunction Video(props) {\n  const DateTimePretty = withDateTime(DateTime, props.date);\n  return (\n      <div className=\"video\">\n        <iframe title=\"video\" src={props.url} allow=\"autoplay; encrypted-media\" />\n        <DateTimePretty/>\n      </div>\n  )\n}\n\nfunction VideoList(props) {\n  return props.list.map(item => <Video key={item.url} url={item.url} date={item.date} />);\n}\n\nexport default function App() {\n  const [list] = useState([\n    {\n      url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-08-13 13:24:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-08-03 12:10:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2021-02-03 23:16:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2018-01-03 12:10:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2018-01-01 16:17:00'\n    },\n    {\n      url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n      date: '2017-12-02 05:24:00'\n    },\n  ]);\n\n  return (\n      <VideoList list={list} />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport function withDateTime(Component, date) {\n    const timePassed = moment(date).fromNow();\n    return class extends React.Component {\n        render() {\n            return (\n                <Component date={timePassed}/>\n            )\n        }\n\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}